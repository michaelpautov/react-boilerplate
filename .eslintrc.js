/*
  Versions:
  eslint:recommended v8.30.0
  @typescript-eslint/recommended v5.46.1
  plugin:react/recommended v7.31.11
  react-hooks/recommended v4.6.0
 */

module.exports = {
  env: {
    browser: true,
    es2021: true,
    jest: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
    'prettier',
  ],
  parser: '@typescript-eslint/parser',
  overrides: [
    {
      files: ['*.ts', '*.tsx'],
      extends: [
        'plugin:@typescript-eslint/recommended',
        'plugin:@typescript-eslint/recommended-requiring-type-checking',
      ],
      parserOptions: {
        ecmaVersion: 'latest',
        sourceType: 'module',
        project: ['./tsconfig.json'],
      },
    },
  ],
  plugins: [
    'react',
    'react-hooks',
    '@typescript-eslint',
    'prettier',
    'simple-import-sort',
    'import',
  ],
  settings: {
    react: {
      version: '18.2',
    },
  },
  rules: {
    // START: Common Eslint Rules Possible Problems
    'no-console': 'error',
    'no-debugger': 'error',
    'no-alert': 'error',
    'react/react-in-jsx-scope': 'off',
    camelcase: 'error',
    quotes: ['error', 'single'],
    'no-duplicate-imports': 'error',
    '@typescript-eslint/no-explicit-any': 'error',
    'import/no-anonymous-default-export': 'off',
    'security/detect-object-injection': 'off',
    'array-callback-return': 'error',
    'no-await-in-loop': 'error',
    'simple-import-sort/imports': 'error',
    'simple-import-sort/exports': 'error',
    'import/first': 'error',
    'import/newline-after-import': 'error',
    'import/no-duplicates': 'error',
    'no-constant-binary-expression': 'error',
    'no-new-native-nonconstructor': 'error',
    'no-promise-executor-return': 'error',
    'no-self-compare': 'error',
    'no-template-curly-in-string': 'error',
    'no-unmodified-loop-condition': 'error',
    'no-use-before-define': 'error',
    // END: Common Eslint Rules Possible Problems
    // START: Common Eslint Rules Suggestions
    'arrow-body-style': ['error', 'as-needed'],
    'capitalized-comments': 'error',
    'default-param-last': 'off',
    'dot-notation': ['error', { allowKeywords: true }],
    eqeqeq: ['error', 'always'],
    'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
    'id-length': ['error', { min: 3, properties: 'never' }],
    'max-depth': ['error', 2],
    'max-params': ['error', 3],
    'new-cap': ['error', { newIsCap: true }],
    'no-else-return': 'error',
    'no-empty-function': 'error',
    'no-eq-null': 'error',
    'no-extra-boolean-cast': 'error',
    'no-floating-decimal': 'error',
    'no-global-assign': 'error',
    'no-lonely-if': 'error',
    'no-loop-func': 'error',
    'no-magic-numbers': ['error', { ignoreArrayIndexes: true, ignore: [1] }],
    'no-multi-assign': 'error',
    'no-multi-str': 'error',
    'no-new-func': 'error',
    'no-new-object': 'error',
    'no-return-assign': ['error', 'always'],
    'no-return-await': 'error',
    'no-shadow': 'error',
    'no-undef-init': 'error',
    'no-underscore-dangle': 'error',
    'no-unneeded-ternary': 'error',
    'no-useless-rename': 'error',
    'no-useless-return': 'error',
    'no-var': 'error',
    'prefer-const': 'error',
    'prefer-destructuring': 'error',
    'prefer-object-spread': 'error',
    'prefer-template': 'error',
    'quote-props': ['error', 'as-needed'],
    'require-await': 'error',
    'spaced-comment': ['error', 'always'],
    // END: Common Eslint Rules Suggestions
    // START: Common Eslint Rules Layout & Formatting
    'arrow-spacing': 'error',
    'block-spacing': 'error',
    'brace-style': 'error',
    'comma-spacing': ['error', { before: false, after: true }],
    'computed-property-spacing': ['error', 'never'],
    'func-call-spacing': ['error', 'never'],
    'jsx-quotes': ['error', 'prefer-double'],
    'key-spacing': ['error', { beforeColon: false }],
    'keyword-spacing': ['error', { before: true }],
    'newline-per-chained-call': ['error', { ignoreChainWithDepth: 2 }],
    'no-multi-spaces': 'error',
    'no-multiple-empty-lines': 'error',
    'no-trailing-spaces': 'error',
    'no-whitespace-before-property': 'error',
    // END: Common Eslint Rules Layout & Formatting
    // START: React Rules
    'react/button-has-type': 'error',
    'react/destructuring-assignment': ['error', 'always'],
    'react/forbid-dom-props': [2, { forbid: ['style', 'className'] }],
    'react/forbid-component-props': [2, { forbid: ['style', 'className', 'key'] }],
    'react/hook-use-state': 'error',
    'react/jsx-boolean-value': 'error',
    'react/jsx-closing-tag-location': 'error',
    'react/jsx-no-useless-fragment': 'error',
    'react/jsx-pascal-case': 'error',
    'react/jsx-space-before-closing': 'error',
    'react/jsx-wrap-multilines': [
      2,
      {
        declaration: 'parens',
        assignment: 'parens',
        return: 'parens',
        arrow: 'parens',
        condition: 'ignore',
        logical: 'ignore',
        prop: 'ignore',
      },
    ],
    'react/no-array-index-key': 'error',
    'react/no-danger': 'error',
    'react/no-multi-comp': 'error',
    'react/no-this-in-sfc': 'error',
    'react/no-unstable-nested-components': [
      'error',
      {
        allowAsProps: false,
      },
    ],
    'react/no-unused-state': 'error',
    'react/self-closing-comp': 'error',
    // END: React Rules
    // START: React Hooks Rules
    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': 'warn',
    // END: React Hooks Rules
    // START: Typescript Rules
    '@typescript-eslint/array-type': ['error', { default: 'array-simple' }],
    '@typescript-eslint/consistent-indexed-object-style': ['error', 'record'],
    '@typescript-eslint/consistent-type-definitions': ['error', 'type'],
    '@typescript-eslint/no-confusing-non-null-assertion': 'error',
    '@typescript-eslint/no-duplicate-enum-values': 'error',
    '@typescript-eslint/no-extraneous-class': 'error',
    '@typescript-eslint/no-invalid-void-type': 'error',
    '@typescript-eslint/no-redundant-type-constituents': 'error',
    '@typescript-eslint/no-require-imports': 'error',
    '@typescript-eslint/no-unnecessary-boolean-literal-compare': 'error',
    '@typescript-eslint/no-unnecessary-condition': 'error',
    '@typescript-eslint/no-unnecessary-qualifier': 'error',
    '@typescript-eslint/no-unnecessary-type-arguments': 'error',
    '@typescript-eslint/no-unsafe-declaration-merging': 'error',
    '@typescript-eslint/no-useless-empty-export': 'error',
    '@typescript-eslint/non-nullable-type-assertion-style': 'error',
    '@typescript-eslint/prefer-enum-initializers': 'error',
    '@typescript-eslint/prefer-for-of': 'error',
    '@typescript-eslint/prefer-function-type': 'error',
    '@typescript-eslint/prefer-includes': 'error',
    '@typescript-eslint/prefer-literal-enum-member': 'error',
    '@typescript-eslint/prefer-optional-chain': 'error',
    '@typescript-eslint/prefer-reduce-type-parameter': 'error',
    '@typescript-eslint/prefer-string-starts-ends-with': 'error',
    '@typescript-eslint/prefer-ts-expect-error': 'error',
    '@typescript-eslint/promise-function-async': 'error',
    '@typescript-eslint/require-array-sort-compare': ['error', { ignoreStringArrays: false }],
    '@typescript-eslint/sort-type-constituents': 'error',
    '@typescript-eslint/strict-boolean-expressions': 'error',
    '@typescript-eslint/switch-exhaustiveness-check': 'error',
    '@typescript-eslint/unified-signatures': 'error',
    '@typescript-eslint/default-param-last': 'error',
    '@typescript-eslint/no-non-null-assertion': 'off',

    // END: Typescript Rules
  },
}
